
tas3da2_C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000118  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000c4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000118  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000148  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000188  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000068a  00000000  00000000  000001a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000607  00000000  00000000  00000832  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000220  00000000  00000000  00000e39  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000105c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000341  00000000  00000000  00001080  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000042  00000000  00000000  000013c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001403  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 60 00 	jmp	0xc0	; 0xc0 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:

*/

int main(void)
{
	DDRB |= (1 << 2); 									//Set PB2 output	
  80:	22 9a       	sbi	0x04, 2	; 4
	PORTB = 0;											//initialize to 0
  82:	15 b8       	out	0x05, r1	; 5

	TCCR0A = 0;											//normal mod
  84:	14 bc       	out	0x24, r1	; 36
	TCCR0B |= (0 << CS02) | (1 << CS01) | (1 << CS00);	//prescaler 64
  86:	85 b5       	in	r24, 0x25	; 37
  88:	83 60       	ori	r24, 0x03	; 3
  8a:	85 bd       	out	0x25, r24	; 37
	TCNT0  = 0;											//initialize counter
  8c:	16 bc       	out	0x26, r1	; 38
	while(1)
	{		
		for(i=0; i < 62500; i++)
		{
			if(i == 31250)
				PORTB ^= (1 << 2);
  8e:	34 e0       	ldi	r19, 0x04	; 4
	unsigned int i;	//loop control variable


	while(1)
	{		
		for(i=0; i < 62500; i++)
  90:	80 e0       	ldi	r24, 0x00	; 0
  92:	90 e0       	ldi	r25, 0x00	; 0
		{
			if(i == 31250)
  94:	82 31       	cpi	r24, 0x12	; 18
  96:	2a e7       	ldi	r18, 0x7A	; 122
  98:	92 07       	cpc	r25, r18
  9a:	29 f4       	brne	.+10     	; 0xa6 <main+0x26>
				PORTB ^= (1 << 2);
  9c:	25 b1       	in	r18, 0x05	; 5
  9e:	23 27       	eor	r18, r19
  a0:	25 b9       	out	0x05, r18	; 5
	unsigned int i;	//loop control variable


	while(1)
	{		
		for(i=0; i < 62500; i++)
  a2:	01 96       	adiw	r24, 0x01	; 1
  a4:	f7 cf       	rjmp	.-18     	; 0x94 <main+0x14>
		{
			if(i == 31250)
				PORTB ^= (1 << 2);
			if(i == 62499)	
  a6:	83 32       	cpi	r24, 0x23	; 35
  a8:	24 ef       	ldi	r18, 0xF4	; 244
  aa:	92 07       	cpc	r25, r18
  ac:	19 f4       	brne	.+6      	; 0xb4 <main+0x34>
				PORTB ^= (0 << 2);
  ae:	85 b1       	in	r24, 0x05	; 5
  b0:	85 b9       	out	0x05, r24	; 5
  b2:	ee cf       	rjmp	.-36     	; 0x90 <main+0x10>
	unsigned int i;	//loop control variable


	while(1)
	{		
		for(i=0; i < 62500; i++)
  b4:	01 96       	adiw	r24, 0x01	; 1
  b6:	84 32       	cpi	r24, 0x24	; 36
  b8:	24 ef       	ldi	r18, 0xF4	; 244
  ba:	92 07       	cpc	r25, r18
  bc:	59 f7       	brne	.-42     	; 0x94 <main+0x14>
  be:	e8 cf       	rjmp	.-48     	; 0x90 <main+0x10>

000000c0 <_exit>:
  c0:	f8 94       	cli

000000c2 <__stop_program>:
  c2:	ff cf       	rjmp	.-2      	; 0xc2 <__stop_program>
